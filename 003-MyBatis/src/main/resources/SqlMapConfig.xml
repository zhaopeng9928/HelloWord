<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--Mybatis主配置文件-->
<!-- 根标签 -->
<configuration>

    <properties>
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </properties>

    <!-- 环境，可以配置多个，default：指定采用哪个环境 -->
    <environments default="mysql">
        <!-- id：唯一标识 -->
        <environment id="mysql">
            <!--配置事务的类型-->
            <transactionManager type="JDBC"></transactionManager>
            <!--配置数据源(连接池)
                mybatis提供了3种数据源类型，分别是：POOLED,UNPOOLED,JNDI
	                    POOLED 表示支持JDBC数据源连接池
                        UNPOOLED 表示不支持数据源连接池
                        JNDI 表示支持外部数据源连接池
            -->
            <dataSource type="POOLED">
                <!--配置连接数据库的4个基本信息-->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/test"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>
            </dataSource>
        </environment>

        <environment id="development">
            <!-- 事务管理器，JDBC类型的事务管理器 -->
            <transactionManager type="JDBC" />
            <!-- 数据源，池类型的数据源 -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}" /> <!-- 配置了properties，所以可以直接引用 -->
                <property name="url" value="${url}" />
                <property name="username" value="${username}" />
                <property name="password" value="${password}" />
            </dataSource>
        </environment>
    </environments>

    <!--  是否开启自动驼峰命名的规范
        <settings>
            <setting name="mapUnderscoreToCamelCase" value="true"/>
        </settings>
    -->

    <mappers>
        <mapper resource="mappers/EmpMapper.xml"/>
        <mapper resource="mappers/DeptMapper.xml"/>
    </mappers>

    <!--
        类型别名是为 Java 类型命名的一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。
        缺点：每个pojo类都要去配置。
        解决方案：使用扫描包，扫描指定包下的所有类，扫描之后的别名就是类名（不区分大小写），建议使用的时候和类名一致。
        type:实体类的全路径
        alias:别名，通常首字母大写

        <typeAliases>
                type:实体类的全路径。alias:别名，通常首字母大写
                <typeAlias type="com.zpc.mybatis.pojo.User" alias="User"/>
                <package name="com.zpc.mybatis.pojo"/>
        </typeAliases>
    -->



</configuration>